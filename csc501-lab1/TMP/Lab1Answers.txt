1.
Exp-distribution scheduler
	Advantage:
		- This scheduling policy solves the starvation problem to a very hight degree.
		- It ensures fairness by exp probability distribution and preemptions.
		- various lambda values affect the selecting result.
	Disadvantage:
		- Because this policy selects process based on the random value calculated by expdev.
		  As a result, it could be possible that highest priority processes doesn't get scheduled first.
		  So if the user needs a highly interactive system, this policy might not be the right one.
		  
Linux-like scheduler
	Advantage:
		- It ensures absolutely no starvation, since every runnable process can run up to its quatum time period.
		- Each process shares the CPU cycles intelligently. Because quantum is predetermined before each epoch,
		  so if a process didn't get the chance to finish up its quantum, it still has 1/2 of the left over quantum
		  plus the base priority.
		  
	Disadvantage:
		- Much higher overhead. This policy looks through all runnable processes and then determines if it is time
		  to start a new epoch. Having NPROC set to 30 doesn't affect too much, but if the total number of processes
		  is 200+, it certainly takes a lot of time.
		- Calculations also take time, since we have to compute the quantum, counter, and goodness value for every process.

Default Round Robin in Xinu
	Advantage:
		- Easy to implement, easy to understand.
		- Less overhead. Rescheduling takes much less time.
	
	Disadvantage:
		- Starvation! Low priority processes may never get scheduled.
		- Not interaction responsive. If a process has low priority and is waiting for user input, it might never been shceduled.

2. In the exp-distribution scheduler, the NULL process gets to run only when no other processes are in the ready queue. Because the smallest value of the random number x
   generated by the equation can only be 0, and NULL process's priority is 0. Only in the situation when the NULL process is the only process in the ready queue, no matter
   what random number x generated, it is always no less than the highest priority in the queue, in this case, the NULL process.
   
   For the Linux-like scheduler, NULL process won't be scheduled because it's quantum will always be 0 so that it's counter and goodness value will be 0 as well.